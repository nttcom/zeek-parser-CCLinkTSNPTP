module TSN_PTP;

import spicy;

public type Packet = unit {
    mType: bitfield(8) {
        x: 4..7 &convert=MType($$);
    } &bit-order = spicy::BitOrder::MSB0;
    switch ( self.mType.x ) {
        MType::PtpSync                ->  ptpSync:  PtpSync;
        MType::PtpPdelayReq           ->  ptpPdelayReq:  PtpPdelayReq;
        MType::PtpPdelayResp          ->  ptpPdelayResp:  PtpPdelayResp;
        MType::PtpFollowUp            ->  ptpFollowUp:  PtpFollowUp;
        MType::PtpPdelayRespFollowUp  ->  ptpPdelayRespFollowUp:  PtpPdelayRespFollowUp;
        MType::PtpAnnounce            ->  ptpAnnounce:  PtpAnnounce;
        *                             ->  unk:  Unknown;
        };     
};

type MType = enum {
    PtpSync = 0,
    PtpPdelayReq = 2,
    PtpPdelayResp = 3,
    PtpFollowUp = 8,
    PtpPdelayRespFollowUp = 10,
    PtpAnnounce = 11,
};

type PtpSync = unit {
    data: bytes &eod;
};

type PtpPdelayReq = unit {
    data: bytes &eod;
};

type PtpPdelayResp = unit {
    data: bytes &eod;
};

type PtpFollowUp = unit {
    data: bytes &eod;
};

type PtpPdelayRespFollowUp = unit {
    data: bytes &eod;
};

type PtpAnnounce = unit {
    data: bytes &eod;
};

type Unknown = unit {
    data: bytes &eod;
};
